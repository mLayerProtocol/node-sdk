import { isHexString } from "ethers";
import { BaseEntity } from "./base";
import { Utils } from "../helper";

type AddressString = string;
type HexString = string;

export interface ISubnet {
  // Primary
  id?: string; // id generated by node
  ref?: string; // optional custom reference
  n: string; // name
  acct?: AddressString; // owner of subNetwork
  ts?: number; // timestamp in millisec

  // sig?: HexString;
  // hash?: HexString;
}

export class Subnet extends BaseEntity {
  public id: string = '';
  public reference: string = '';
  public name: string = '';
  public account: string = '';
  public timestamp: number = 0;

  /**
   * @override
   * @returns {ISubnet}
   */
  public asPayload(): ISubnet {
    return {
      id: this.id,
      ref: this.reference,
      n: this.name,
    };
  }

  /**
   * @override
   * @returns {Buffer}
   */
  public encodeBytes(): Buffer {
    return Utils.encodeBytes(
      { type: 'string', value: this.id },
      { type: 'string', value: this.reference },
      { type: 'string', value: this.name }
    );
  }
}
