import { isHexString } from 'ethers';
import { BaseEntity } from './base';
import { Utils } from '../helper';

export type AddressString = string;
export type HexString = string;

export interface ITopic {
  // Primary
  id?: string; // id generated by node
  ref?: string; // optional custom reference
  n: string; // name
  hand: string; // handle
  pTH?: string; // parent handle hash
  desc?: string; // description
  sC?: number; // subscription count
  acct?: AddressString; // owner of topic
  ts?: number; // timestamp in millisec
  pub: boolean; // is public topic
  // sig?: HexString;
  // hash?: HexString;
}

export class Topic extends BaseEntity {
  public id: string = '';
  public reference: string = '';
  public name: string = '';
  public handle: string = '';
  public description: string = '';
  public parentTopicHash: string = '';
  public subsriberCount: number = 0;
  public account: string = '';
  public timestamp: number = 0;
  public isPublic: boolean = false;

  /**
   * @override
   * @returns {ITopic}
   */
  public asPayload(): ITopic {
    return {
      id: this.id,
      ref: this.reference,
      n: this.name,
      hand: this.handle,
      pTH: this.parentTopicHash, // parent handle hash
      desc: this.description, // description
      // sC: this.subsriberCount, // subscription count
      // acct: this.account, // owner of topic
      // ts: this.timestamp, // timestamp in millisec
      pub: this.isPublic, // is public topic
    };
  }

  /**
   * @override
   * @returns {Buffer}
   */
  public encodeBytes(): Buffer {
    return Utils.encodeBytes(
      { type: 'string', value: this.reference },
      { type: 'string', value: this.name },
      { type: 'string', value: this.handle },
      { type: 'string', value: this.description },
      { type: 'hex', value: this.parentTopicHash },
      // { type: 'int', value: this.subsriberCount },
      { type: 'boolean', value: this.isPublic }
    );
  }
}
